#include <stdio.h>
#include <sys/socket.h>
#include <stdlib.h>
#include <netinet/in.h>
#include <string.h>
#define PORT 8080

int main(int argc, char const *argv[])
{
        struct sockaddr_in address;
        int sock = 0, valread;
        struct sockaddr_in serv_addr;
        char hello[1024];
        char buffer[1024];
        if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0)
        {
                printf("\n Socket creation error \n");
                return -1;
        }

        memset(&serv_addr, '0', sizeof(serv_addr));

        serv_addr.sin_family = AF_INET;
        serv_addr.sin_port = htons(PORT);
        serv_addr.sin_addr.s_addr=inet_addr("192.168.17.129");

        // Convert IPv4 and IPv6 addresses from text to binary form
        if(inet_pton(AF_INET, "192.168.17.129", &serv_addr.sin_addr)<=0)
        {
                printf("\nInvalid address/ Address not supported \n");
                return -1;
        }

        if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)
        {
                printf("\nConnection Failed \n");
                return -1;
        }
	printf(">");
	gets(hello);
	while(strcmp(hello,"bye")!=0)
	{
        send(sock , hello , strlen(hello) , 0 );
	bzero(buffer,sizeof(buffer));//清零
        valread = read( sock , buffer, 1024);
	puts(buffer);
	printf("\n");
	bzero(buffer,1024);
	printf(">");
	gets(hello);
	}
	if(strcmp(hello,"bye")==0)
	{
	send(sock , hello , strlen(hello) , 0 );
	bzero(buffer,sizeof(buffer));
	valread = read( sock , buffer, 1024);
	puts(buffer);
	printf("\n");
	}
        return 0;
}

